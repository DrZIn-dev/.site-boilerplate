version: "3.7"

services:
  bizarre_backoffice:
    image: ghcr.io/veryeasycode/bizarre-backoffice:${CORE_BACKOFFICE_VERSION:-latest}
    restart: always
    ports:
      - 30000:80
    networks:
      - site_ingress

  bizarre_functions:
    image: ghcr.io/veryeasycode/bizarre-functions:${CORE_FUNCTION_VERSION:-latest}
    restart: always
    ports:
      - 30001:80
    networks:
      - site_ingress
    environment:
      PORT: 80
      BASE_URL: /api
      NODE_ENV: production
      LOG_ROTATE_INTERVAL: 2
      LOG_DIRECTORY: ./log
      MONGO_USERNAME: root
      MONGO_PASSWORD: ${MONGODB_ROOT_PASSWORD}
      MONGO_HOST: primary
      MONGO_PORT: 27017
      MONGO_DB: ${MONGODB_DB}
      MONGO_AUTH_DB: admin
      MONGO_REPLICA_SET: replicaset
      REDIS_HOST: cache
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${CORE_REDIS_PASSWORD}
    volumes:
      - ../storage/image:/usr/bizarre-functions/upload
      - ../storage/log:/usr/bizarre-functions/log

  bizarre_trigger:
    image: ghcr.io/veryeasycode/bizarre-trigger:${CORE_TRIGGER_VERSION:-latest}
    restart: always
    networks:
      - site_ingress
    environment:
      MONGO_USERNAME: root
      MONGO_PASSWORD: ${MONGODB_ROOT_PASSWORD}
      MONGO_HOST: primary
      MONGO_PORT: 27017
      MONGO_DB: ${MONGODB_DB}
      MONGO_AUTH_DB: admin
      MONGO_REPLICA_SET: replicaset
      REDIS_HOST: cache
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${CORE_REDIS_PASSWORD}

  mongo_stream:
    image: ghcr.io/veryeasycode/ez-mongo-stream:${CORE_STREAM_VERSION:-latest}
    restart: always
    ports:
      - 30002:80
    networks:
      - site_ingress
    environment:
      PORT: 80
      NODE_ENV: production
      MONGO_USERNAME: root
      MONGO_PASSWORD: ${MONGODB_ROOT_PASSWORD}
      MONGO_HOST: primary
      MONGO_PORT: 27017
      MONGO_DB: ${MONGODB_DB}
      MONGO_AUTH_DB: admin
      MONGO_REPLICA_SET: replicaset
      REDIS_HOST: cache
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${CORE_REDIS_PASSWORD}

  cache:
    image: redis:6.2
    restart: always
    command: redis-server --requirepass ${CORE_REDIS_PASSWORD}
    networks:
      - site_ingress
    volumes:
      - ./data/core_cache:/data

networks:
  site_ingress:
    name: site_ingress
    external: true
